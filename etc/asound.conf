defaults.pcm.rate_converter "samplerate_medium"

pcm.dmix192k  {
  type dmix
  ipc_key 1980           # must be unique!
  ipc_key_add_uid false  # let multiple users share
  ipc_perm 0666          # IPC permissions for multi-user sharing (octal, default 0600)
  slave {
    pcm "hw:1,0"
    period_time 0
    period_size 512
    buffer_time 0
    buffer_size 8192
    format "S32_LE"
    rate 192000
    channels 2
  }
  bindings {
    0 0
    1 1
  }
}

pcm.dmix96k  {
  type dmix
  ipc_key 1980           # must be unique!
  ipc_key_add_uid false  # let multiple users share
  ipc_perm 0666          # IPC permissions for multi-user sharing (octal, default 0600)
  slave {
    pcm "hw:1,0"
    period_time 0
    period_size 512
    buffer_time 0
    buffer_size 8192
    format "S32_LE"
    rate 96000
    channels 2
  }
  bindings {
    0 0
    1 1
  }
}

pcm.dsnoop48k {
  type dsnoop
  ipc_key 1981           # must be unique!
  ipc_key_add_uid false  # let multiple users share
  ipc_perm 0666          # IPC permissions for multi-user sharing (octal, default 0600)
  slave {
    pcm "hw:1,0"
    period_size 1024
    period_time 0
    buffer_size 8192
    buffer_time 0
    rate 48000
    channels 2
    periods 0
  }
  bindings {
    0 0
    1 1
  }
}

pcm.asym96k48k {
  type asym
  playback.pcm pcm.dmix96k;
  capture.pcm pcm.dsnoop48k;
}

pcm.plug_asym96k48k {
  type plug
  slave.pcm pcm.asym96k48k;
}

ctl.plug_asym96k48k {
  type hw
  card 0
}

pcm.asym192k48k {
  type asym
  playback.pcm pcm.dmix192k;
  capture.pcm pcm.dsnoop48k;
}

pcm.plug_asym192k48k {
  type plug
  slave.pcm pcm.asym192k48k;
}

ctl.plug_asym192k48k {
  type hw
  card 0
}

pcm.equal {
  type equal;
  slave.pcm pcm.asym96k48k;
}

pcm.plug_equal {
  type plug;
  slave.pcm equal;
}

ctl.plug_equal {
  type equal;
}

pcm.!default pcm.plug_asym192k48k;
